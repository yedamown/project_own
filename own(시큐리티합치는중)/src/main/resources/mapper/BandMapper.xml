<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.prjt.own.band.mapper.BandMapper">
	<sql id="recom">
		<if test="bandCategory != null and bandCategory !=''">
			AND BAND_CATEGORY = #{bandCategory}
		</if>
		<if test="bandLocation != null and bandLocation !=''">
			AND BAND_LOCATION = #{bandLocation}
		</if>
		<if test="bandName != null and bandName !=''">
			AND BAND_NAME LIKE '%' || #{bandName} || '%'
		</if>
		<if test="bandKeyword != null and bandKeyword !=''">
			AND BAND_TAG LIKE '%' || #{bandKeyword} || '%'
		</if>
	</sql>
	<!-- 인서트업데이트 추후 수정...이상함 -->
	<insert id="insertBand">
		<selectKey keyProperty="bandNo" resultType="string" order="BEFORE">
			SELECT BAND_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO BAND(
			BAND_NAME,
	        BAND_INTRO,
	        BAND_KEYWORD,
	        BAND_OPEN_OPTION,
	        BAND_AGE_BEFOROPTION,
	        BAND_AGE_AFTEROPTION,
	        BAND_CATEGORY,
	        BAND_GENDER_OPTION,
	        BAND_MEMBERSHIP_OPTION,
	        BAND_LOCATION
	        BAND_GENDER,
	        BAND_AGE_OPTION 
			)
			VALUES(
					#{bandNo},
					#{bandLeaderid},
					#{bandName},
                    #{bandIntro},
                    #{bandCategory},
                    #{bandOpenOption},
                    #{bandLocOption},
                    #{bandAgeBeforoption},
                    #{bandAgeAfteroption},
                    #{bandCategory},
                    #{bandGenderOption},
                    #{bandMembershipOption},
                    #{bandLocation},
                    #{bandAgeOption}
                  )
	</insert>
	<update id="updateBand">
		UPDATE band
				    SET
				        band_name = #{bandName},
				        band_intro = #{bandIntro},
				        band_keyword = #{bandKeyword},
				        band_open_option = #{bandOpenOption},
				        BAND_AGE_OPTION = #{bandAgeOption},
				        band_age_beforoption = #{bandAgeBeforoption},
				        band_age_afteroption = #{bandAgeAfteroption},
				        band_category = #{bandCategory},
				        band_gender_option = #{bandGenderOption},
				        band_membership_option = #{bandMembershipOption},
				        band_location = #{bandLocation}
			       where band_no = #{bandNo}
	</update>
	<select id="getBand" resultType="BandVO">
		SELECT		BAND_NO,
					BAND_LEADERID,
					BAND_NAME,
			        BAND_INTRO,
			        BAND_KEYWORD,
			        BAND_OPEN_OPTION,
			        BAND_AGE_OPTION
			        BAND_AGE_BEFOROPTION,
			        BAND_AGE_AFTEROPTION,
			        BAND_CATEGORY,
			        BAND_GENDER_OPTION,
			        BAND_MEMBERSHIP_OPTION,
			        BAND_LOCATION
			        BAND_GENDER
			FROM BAND
	       WHERE 	BAND_NO = #{bandNo}
	</select>
	<sql id="condition">
		<if test="bandCategory != null and bandCategory !=''">
			AND BAND_CATEGORY LIKE = #{bandCategory} 
		</if>
		<if test="bandCategory != null and bandCategory !=''">
			AND band_open_option = #{bandCategory}
		</if>
		<if test="bandLocation != null and bandLocation !=''">
			AND band_location = #{bandLocation}
		</if>
	</sql>
	<select id="getBandAll" resultType="BandVO">
		SELECT  BAND_NO,
				BAND_LEADERID,
				BAND_NAME,
		        BAND_INTRO,
		        EXERSUB_NAME "band_category",
		        BAND_OPEN_OPTION,
		        BAND_AGE_OPTION,
		        BAND_AGE_BEFOROPTION,
		        BAND_AGE_AFTEROPTION,
		        BAND_KEYWORD,
		        BAND_GENDER_OPTION,
		        BAND_MEMBERSHIP_OPTION,
		        LOC_CITY "band_location",
		        BAND_GENDER
		 FROM ( SELECT ROWNUM RN, A.* FROM (
                      
                                    SELECT  BAND_NO,
									        BAND_LEADERID,
									        BAND_NAME,
									        BAND_INTRO,
									        EXERSUB_NAME,
									        BAND_OPEN_OPTION,
									        BAND_AGE_OPTION,
									        BAND_AGE_BEFOROPTION,
									        BAND_AGE_AFTEROPTION,
									        BAND_CATEGORY,
									        BAND_KEYWORD,
									        BAND_GENDER_OPTION,
									        BAND_MEMBERSHIP_OPTION,
									        LOC_CITY,
									        BAND_GENDER
                                    FROM BAND A, EXER_SUB B, OWN_LOCATION C
									        WHERE A.BAND_CATEGORY = B.EXERSUB_NO
									        AND A.BAND_LOCATION=C.LOC_CODE
                                            AND BAND_OPEN_OPTION IN ('BC01', 'BC03')
									        <include refid="condition"></include>
                                    
        
		<![CDATA[		
				) A WHERE ROWNUM <= #{last} ) WHERE RN >= #{first}
		]]>
	</select>
	<select id="count" resultType="int">
		SELECT COUNT(*)
        	FROM BAND
                WHERE BAND_OPEN_OPTION IN ('BC01', 'BC03')
                <include refid="condition"></include>
	</select>
	<select id="getMemberBandAll" resultType="BandVO">
		SELECT		A.BAND_NO,
					A.BAND_LEADERID,
					A.BAND_NAME,
			        A.BAND_INTRO,
			        A.BAND_KEYWORD,
			        A.BAND_OPEN_OPTION,
			        A.BAND_AGE_OPTION,
			        A.BAND_AGE_BEFOROPTION,
			        A.BAND_AGE_AFTEROPTION,
			        A.BAND_CATEGORY,
			        A.BAND_GENDER_OPTION,
			        A.BAND_MEMBERSHIP_OPTION,
			        A.BAND_LOCATION
			        A.BAND_GENDER
		    FROM BAND A, BAND_MEMBER_DETAIL B
		        WHERE A.BAND_NO = B.BAND_NO
		        AND B.USER_ID = #{userId}
		        AND B.BAND_MEMBER_STATUS = 'BA02'
		        AND B.BAND_KICK_STATUS = 'BB01'
	</select>
	<select id="getBandRecentAll" resultType="map">
		SELECT
            A.BAND_NO "bandNo",
            A.BAND_NAME "bandName",
            A.BAND_INTRO "bandIntro",
            A.BAND_KEYWORD "bandKeyword",
            A.BAND_OPEN_OPTION "bandOpenOption",
            A.BAND_AGE_OPTION "bandAgeOption",
            A.BAND_AGE_BEFOROPTION "bandAgeBeforoption",
            A.BAND_AGE_AFTEROPTION "bandAgeAfteroption",
            A.BAND_CATEGORY "bandCategory",
            A.BAND_GENDER_OPTION "bandGenderOption",
            A.BAND_MEMBERSHIP_OPTION "bandMembershipOption",
            A.BAND_LOCATION "bandLocation",
            D.RECENTDAY "recentday",
            E.MEMCOUNT "memcount"
        FROM BAND A, BAND_MEMBER_DETAIL B, BAND_BOARD_OPTION C, 
                (SELECT 
                        MAX(BAND_BOARD_DATE) "RECENTDAY",
                        BAND_BOARD_OPTION_NO
                    FROM BAND_BOARD_DETAIL
                    GROUP BY BAND_BOARD_OPTION_NO) D,
                (SELECT BAND_NO, COUNT(*) "MEMCOUNT"
                    FROM BAND_MEMBER_DETAIL
                    GROUP BY BAND_NO) E
            WHERE A.BAND_NO = B.BAND_NO
            AND B.USER_ID = #{userId}
            AND B.BAND_MEMBER_STATUS = 'BA02'
            AND B.BAND_KICK_STATUS = 'BB01'
            AND A.BAND_NO = C.BAND_NO(+)
            AND C.BAND_BOARD_OPTION_NO= D.BAND_BOARD_OPTION_NO(+)
            AND A.BAND_NO = E.BAND_NO(+)
            ORDER BY D.RECENTDAY DESC  NULLS LAST
	</select>
	<!-- 내가 가입한 모든 밴드 3개씩 페이징 -->
	<select id="getMyBandAll" resultType="map">
		select 
				   BAND_NO "bandNo",
                   BAND_NAME "bandName",
                   BAND_INTRO "bandIntro",
                   BAND_KEYWORD "bandKeyword",
                   BAND_OPEN_OPTION "bandOpenOption",
                   BAND_AGE_OPTION "bandAgeOption",
                   BAND_AGE_BEFOROPTION "bandAgeBeforoption",
                   BAND_AGE_AFTEROPTION "bandAgeAfteroption",
                   BAND_CATEGORY "bandCategory",
                   BAND_GENDER_OPTION "bandGenderOption",
                   BAND_MEMBERSHIP_OPTION "bandMembershipOption",
                   BAND_LOCATION "bandLocation",
                   RECENTDAY "recentday",
				   MEMCOUNT "memcount"
        from ( SELECT ROWNUM RN, A.* FROM (
                                            SELECT * FROM (

                                                                SELECT
                                                                            A.BAND_NO,
                                                                            A.BAND_NAME,
                                                                            A.BAND_INTRO,
                                                                            A.BAND_KEYWORD,
                                                                            A.BAND_OPEN_OPTION,
                                                                            A.BAND_AGE_BEFOROPTION,
                                                                            A.BAND_AGE_AFTEROPTION,
                                                                            A.BAND_CATEGORY,
                                                                            A.BAND_GENDER_OPTION,
                                                                            A.BAND_MEMBERSHIP_OPTION,
                                                                            A.BAND_LOCATION,
                                                                            A.BAND_AGE_OPTION,
                                                                            D.RECENTDAY,
          																	E.MEMCOUNT
                                                                        FROM BAND A, BAND_MEMBER_DETAIL B, BAND_BOARD_OPTION C, 
                                                                                (SELECT 
                                                                                        MAX(BAND_BOARD_DATE) "RECENTDAY",
                                                                                        BAND_BOARD_OPTION_NO
                                                                                    FROM BAND_BOARD_DETAIL
                                                                                    GROUP BY BAND_BOARD_OPTION_NO) D,
                                                                                (SELECT BAND_NO, COUNT(*) "MEMCOUNT"
                                                                                    FROM BAND_MEMBER_DETAIL
                                                                                    GROUP BY BAND_NO) E
                                                                            WHERE A.BAND_NO = B.BAND_NO
                                                                            <!-- leaderid로 검색하지만 실제로는 유저아이디..검색용도 -->
                                                                            AND B.USER_ID = #{bandLeaderid}
                                                                            AND B.BAND_MEMBER_STATUS = 'BA02'
                                                                            AND B.BAND_KICK_STATUS = 'BB01'
                                                                            AND A.BAND_NO = C.BAND_NO(+)
                                                                            AND C.BAND_BOARD_OPTION_NO= D.BAND_BOARD_OPTION_NO(+)
                                                                            AND A.BAND_NO = E.BAND_NO(+)
                           
							
									<if test="bandName != null and bandName !=''">
										AND BAND_NAME LIKE '%' || #{bandName} || '%'
									</if>
                                                                            ORDER BY D.RECENTDAY DESC nulls last
<![CDATA[            
                         )) A WHERE ROWNUM <= #{last} ) WHERE RN >= #{first}
]]>
	</select>
	<!-- 내가 가입한 모든 밴드..서칭도 가능하게  -->
	<select id="count2" resultType="int" parameterType="map">
		SELECT COUNT(*) FROM (
								SELECT	A.BAND_NO,
								        A.BAND_NAME,
								        A.BAND_INTRO,
								        A.BAND_KEYWORD,
								        A.BAND_OPEN_OPTION,
								        A.BAND_AGE_BEFOROPTION,
								        A.BAND_AGE_AFTEROPTION,
								        A.BAND_CATEGORY,
								        A.BAND_GENDER_OPTION,
								        A.BAND_MEMBERSHIP_OPTION,
								        A.BAND_LOCATION
    FROM BAND A, BAND_MEMBER_DETAIL B
        WHERE A.BAND_NO = B.BAND_NO
        AND B.USER_ID = #{userId}
        AND B.BAND_MEMBER_STATUS = 'BA02'
        AND B.BAND_KICK_STATUS = 'BB01'
        <if test="bandName != null and bandName !=''">
			AND BAND_NAME LIKE '%' || #{bandName} || '%'
		</if>
		)
	</select>
	<!-- 마이밴드 최신글 있는 것부터 세개씩페이징해서 가져옴 -->
	<select id="threeBand" resultType="map">
		SELECT 	BAND_NO "bandNo",
				BAND_BOARD_CONTENT "bandBoardContent",
				A.BAND_BOARD_DETAIL_NO "bandBoardDetailNo",
				BAND_BOARD_DATE "bandBoardDate",
				BAND_BOARD_TITLE "bandBoardTitle",
				BAND_BOARD_WRITER "bandBoardWriter",
				RANK "rank",
				REPLY_COUNT "replyCount",
				Band_NAME "bandName"
    		 FROM( 
		            SELECT 
								BAND_NO,
								Band_NAME,
								BAND_BOARD_CONTENT,
								BAND_BOARD_DETAIL_NO,
								BAND_BOARD_DATE,
								BAND_BOARD_TITLE,
								BAND_BOARD_WRITER,
								RANK 
							FROM(
				            SELECT  BAND_NO,
				            		Band_NAME,
				                    BAND_BOARD_CONTENT,
				                    BAND_BOARD_DETAIL_NO,
				                    BAND_BOARD_DATE,
				                    BAND_BOARD_TITLE,
				                    BAND_BOARD_WRITER,
				                    ROW_NUMBER() OVER(PARTITION BY Z.BAND_NO
				                                ORDER BY Z.BAND_NO, Z.BAND_BOARD_DATE DESC) RANK
				                    FROM
				                    (SELECT	A.BAND_NO,
				                    		A.Band_NAME,
				                            D.BAND_BOARD_CONTENT,
				                            D.BAND_BOARD_DETAIL_NO,
				                            D.BAND_BOARD_DATE,
				                            D.BAND_BOARD_TITLE,
				                            D.BAND_BOARD_WRITER
				                            FROM BAND A, BAND_BOARD_OPTION C, BAND_BOARD_DETAIL D
				                                WHERE A.BAND_NO IN 
				                                <foreach collection="bandNos" item="b" separator="," open="(" close=")">
				                                	#{b}
				                                </foreach>
				                                AND A.BAND_NO = C.BAND_NO
				                                AND C.BAND_BOARD_OPTION_NO = D.BAND_BOARD_OPTION_NO) "Z"
<![CDATA[                                  
       				 ) WHERE RANK <=3) A,
]]>
        (SELECT 
                                                            BAND_BOARD_DETAIL_NO,
                                                            COUNT(*) REPLY_COUNT
                                                            FROM BAND_BOARD_DETAIL A, REPLY B
                                                            WHERE A.BAND_BOARD_DETAIL_NO=B.CATEGORY_NO
                                    GROUP BY BAND_BOARD_DETAIL_NO) B
    WHERE A.BAND_BOARD_DETAIL_NO=B.BAND_BOARD_DETAIL_NO(+)
    ORDER BY BAND_BOARD_DATE DESC
	</select>
	
	<select id="allLocation" resultType="map">
		SELECT
			LOC_CODE "locCode",
			LOC_CITY "locCity"
		FROM OWN_LOCATION
	</select>
	<select id="allExcersie" resultType="map">
		SELECT
			EXERSUB_NO "exersubNo",
			EXERSUB_NAME "exersubName"
		FROM EXER_SUB
	</select>
	<!-- 밴드 추천 용 1)가입되어있지않은 2)로케이션이 맞는 3)흥미가 맞는(널ㅇ) 4)성별제한이 있다면 성별 5)생일제한이 있다면 생일 6)공개로-->
	
	<select id="recomBand" resultType="BandVO">
		SELECT  BAND_NO,
				BAND_LEADERID,
				BAND_NAME,
		        BAND_INTRO,
		        EXERSUB_NAME "band_category",
		        BAND_OPEN_OPTION,
		        BAND_AGE_OPTION,
		        BAND_AGE_BEFOROPTION,
		        BAND_AGE_AFTEROPTION,
		        BAND_KEYWORD,
		        BAND_GENDER_OPTION,
		        BAND_MEMBERSHIP_OPTION,
		        LOC_CITY "band_location",
		        BAND_GENDER
		 FROM ( SELECT ROWNUM RN, A.* FROM (
                    SELECT * FROM
                    <!-- 통 문장 -->
                                  (  
                                    SELECT  BAND_NO,
									        BAND_LEADERID,
									        BAND_NAME,
									        BAND_INTRO,
									        EXERSUB_NAME,
									        BAND_OPEN_OPTION,
									        BAND_AGE_OPTION,
									        BAND_AGE_BEFOROPTION,
									        BAND_AGE_AFTEROPTION,
									        BAND_CATEGORY,
									        BAND_KEYWORD,
									        BAND_GENDER_OPTION,
									        BAND_MEMBERSHIP_OPTION,
									        LOC_CITY,
									        BAND_GENDER
									FROM(
									    SELECT *
									        FROM BAND
									        WHERE BAND_NO NOT IN
									        <!-- HJJ가 가입되어있는 밴드목록 -->
									            (SELECT BAND_NO 
									                FROM BAND_MEMBER_DETAIL
									                WHERE BAND_MEMBER_STATUS in 'BA02'
									                AND USER_ID=#{bandLeaderid})
									        <!-- 추가조건오픈 -->
									        AND BAND_OPEN_OPTION IN ('BC01', 'BC03')
									        <!-- 성별제한없음 -->
									        AND BAND_GENDER_OPTION = 'BE02'
									        <!-- 나이제한없음 -->
									        AND BAND_AGE_OPTION = 'BD02'
									    UNION    
									    <!-- 가입되어있지 않으면서 성별제한이 남자 -->
									    SELECT *
									        FROM BAND
									        WHERE BAND_NO NOT IN
									        <!-- hjj가 가입되어있는 밴드목록 -->
									            (SELECT BAND_NO 
									                FROM BAND_MEMBER_DETAIL
									                WHERE BAND_MEMBER_STATUS = 'BA02'
									                AND USER_ID=#{bandLeaderid})
									        <!-- 추가조건오픈 -->
									        AND BAND_OPEN_OPTION IN ('BC01', 'BC03')
									        <!-- 나이제한없음 -->
									        AND BAND_AGE_OPTION = 'BD02'
									        <!-- 성별제한있음(남) -->
									        AND BAND_GENDER_OPTION = 'BE01'
									        AND BAND_GENDER = #{bandGender}
									    UNION    
									    <!-- 가입되어있지 않으면서 나이제한  -->
									    SELECT *
									        FROM BAND
									        WHERE BAND_NO NOT IN
									        <!-- HJJ가 가입되어있는 밴드목록 -->
									            (SELECT BAND_NO 
									                FROM BAND_MEMBER_DETAIL
									                WHERE BAND_MEMBER_STATUS = 'BA02'
									                AND USER_ID=#{bandLeaderid})
									        <!-- 추가조건오픈 -->
									        AND BAND_OPEN_OPTION IN ('BC01', 'BC03')
									        <!-- 나이제한있음 -->
									        AND BAND_AGE_OPTION = 'BD01'
									        <!-- 성별제한없음 -->
									        AND BAND_GENDER_OPTION = 'BE02'
									        AND #{bandAgeAfteroption} BETWEEN BAND_AGE_BEFOROPTION AND BAND_AGE_AFTEROPTION
									        ) A, EXER_SUB B, OWN_LOCATION C
									        WHERE A.BAND_CATEGORY = B.EXERSUB_NO
									        AND A.BAND_LOCATION=C.LOC_CODE
									        <include refid="recom"></include>
                                   ) 
                    <!-- 통 문장 끝 -->
        
		<![CDATA[		
				) A WHERE ROWNUM <= #{last} ) WHERE RN >= #{first}
		]]>
	</select>
</mapper>